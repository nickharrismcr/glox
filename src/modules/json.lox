func parse(text) {
        
    var i = 0;
    var s = text

    fun skipWhitespace() {
        while (i < len(s) and (s[i] == " " or s[i] == "\n" or s[i] == "\r" or s[i] == "\t")) {
            i = i + 1;
        }
    }

    fun parseValue() {
        skipWhitespace();
        if (i >= len(s)) return nil;
        var c = s[i];
        if (c == '"') return parseString();
        if (c == '-' or (c >= "0" and c <= "9")) return parseNumber();
        if (c == '{') return parseObject();
        if (c == '[') return parseArray();
        if (s[i:i+3] == "true") { i = i + 4; return true; }
        if (s[i:i+4] == "false") { i = i + 5; return false; }
        if (s[i:i+3] == "null") { i = i + 4; return nil; }
        return nil;
    }

    fun parseString() {
        i = i + 1; // skip opening "
        var start = i;
        var result = "";
        while (i < len(s) and s[i] != '"') {
            if (s[i] == "\\") {
                result = result + s[start:i-1];
                i = i + 1;
                if (i >= len(s)) break;
                // var esc = s[i];
                // if (esc == '"") result = result + '"';
                // if (esc == "\\") result = result + "\\";
                // if (esc == "/") result = result + "/";
                // if (esc == "b") result = result + "\b";
                // if (esc == "f") result = result + "\f";
                // if (esc == "n") result = result + "\n";
                // if (esc == "r") result = result + "\r";
                // if (esc == "t") result = result + "\t";
                // unicode not handled
                i = i + 1;
                start = i;
            } else {
                i = i + 1;
            }
        }
        result = result + s[start:i-1];
        i = i + 1; // skip closing "
        return result;
    }

    fun parseNumber() {
        var start = i;
        if (s[i] == "-") i = i + 1;
        while (i < len(s) and s[i] >= "0" and s[i] <= "9") i = i + 1;
        if (i < len(s) and s[i] == ".") {
            i = i + 1;
            while (i < len(s) and s[i] >= "0" and s[i] <= "9") i = i + 1;
        }
        // Exponent not handled
        var numStr = s[start:i-1];
        return numStr + 0; // force to number
    }

    fun parseArray() {
        i = i + 1; // skip [
        var arr = [];
        skipWhitespace();
        if (i < len(s) and s[i] == "]") {
            i = i + 1;
            return arr;
        }
        while (i < len(s)) {
            arr.add(parseValue());
            skipWhitespace();
            if (i < len(s) and s[i] == "]") {
                i = i + 1;
                break;
            }
            if (i < len(s) and s[i] == ",") {
                i = i + 1;
            }
        }
        return arr;
    }

    fun parseObject() {
        i = i + 1; // skip {
        var obj = {};
        skipWhitespace();
        if (i < len(s) and s[i] == "}") {
            i = i + 1;
            return obj;
        }
        while (i < len(s)) {
            var key = parseString();
            skipWhitespace();
            if (i < len(s) and s[i] == ":") i = i + 1;
            var value = parseValue();
            obj[key] = value;
            skipWhitespace();
            if (i < len(s) and s[i] == "}") {
                i = i + 1;
                break;
            }
            if (i < len(s) and s[i] == ",") {
                i = i + 1;
            }
        }
        return obj;
    }

    return parseValue();
   
}

// Example usage:
var obj = parse('{"foo": [1, 2, 3], "bar": "baz", "ok": true}');
print obj;