import random
import colour
import math

const GRAVITY = 0.6
 
const BALLS = 1000

func random_vec2D(minX, maxX, minY, maxY) {
    return vec2(random.integer(minX, maxX), random.integer(minY, maxY))
}

class Ball {
    init(pos, radius, col, width, height) {
        this.pos = pos
        this.radius = radius
        this.col = col
        this.vel = vec2(random.float(-3, 3), random.float(-2, 2))
        this.width = width
        this.height = height
        this.bounce = random.float(0.5,0.9)
    }
    update() {
        this.vel.y = this.vel.y + GRAVITY
        this.pos.x = this.pos.x + this.vel.x
        this.pos.y = this.pos.y + this.vel.y
        // Bounce off left/right
        if (this.pos.x < this.radius) {
            this.pos.x = this.radius
            this.vel.x = -this.vel.x * this.bounce
        }
        if (this.pos.x > this.width - this.radius) {
            this.pos.x = this.width - this.radius
            this.vel.x = -this.vel.x * this.bounce
        }
        // Bounce off bottom
        if (this.pos.y > this.height - this.radius) {
            this.pos.y = this.height - this.radius
            this.vel.y = -this.vel.y * this.bounce
            // Damp out tiny bounces
            if (math.abs(this.vel.y) < 1) {
                this.vel.y = 0
            }
        }
        // Stay in bounds at top
        if (this.pos.y < this.radius) {
            this.pos.y = this.radius
            this.vel.y = 0
        }
    }
    draw(g) {
        g.circle_fill(this.pos, this.radius, this.col)
        g.circle(this.pos,this.radius, colour.BLACK)
    }
}

class Balls {
    init(width, height) {
        this.width = width
        this.height = height
        this.balls = []
    }
    add_ball(pos, radius, col) {
        var b = Ball(pos, radius, col, this.width, this.height)
        this.balls.append(b)
    }
    update() {
        foreach (var b in this.balls) {
            b.update()
        }
    }
    reset() {
        foreach(b in this.balls) {
            b.pos.y = random.float(0, 150) // Reset to a random position at the top
            b.vel = vec2(random.float(-3, 3), random.float(-2, 2))
        }
    }
    draw(g) {
        foreach (var b in this.balls) {
            b.draw(g)
        }
    }
}

 
var win = window(0,0)
win.init()
win.toggle_fullscreen()
width = win.get_screen_width()
height = win.get_screen_height()

balls = Balls(width, height)

for (var i = 0; i < BALLS; i = i + 1) {
    var pos = vec2(random.float(50, width-50), random.float(0,150))
    var radius = random.float(5, 50)
    var col = colour.random_rgb()
    balls.add_ball(pos, radius, col)
}

while (!win.should_close()) {
    win.begin()
    win.begin_blend_mode(win.BLEND_ALPHA)
    win.clear(vec4(150,150,150, 255)) // Clear the window with white
    balls.update()
    balls.draw(win)
    win.end()
    if (win.key_pressed(win.KEY_R)) {
        balls.reset() // Reset positions on 'R' key press
    }
}
win.close()