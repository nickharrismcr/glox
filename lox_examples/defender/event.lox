class EventDispatcher {
    init() {
        this.listeners = {};
    }

    // Add an event listener
    // event: string, the name of the event
    // listener: function, the function to call when the event is emitted
    on(event, listener) {
        if (! (event in this.listeners.keys())) {
            this.listeners[event] = [];          
        }
        this.listeners[event].append(listener);
    }
    // Remove an event listener
    // event: string, the name of the event
    // listener: function, the function to remove from the event
    off(event, listener) {
        if (! event in this.listeners.keys()){
            return 
        } 
        var idx = this.listeners[event].find(listener);
        if (idx != -1) {
            this.listeners[event].remove(idx);
        }
    }
    // Emit an event
    // event: string, the name of the event
    // data: any, the data to pass to the event listener
    emit(event, data) {
        if (! (event in this.listeners.keys())) {
            return;
        } 
        foreach (listener in this.listeners[event]) {
            listener(data);
        }
    }
}

