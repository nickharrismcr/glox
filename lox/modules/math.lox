

class Vector2D {

    init(x, y) {
        this.x = x;
        this.y = y;
    }
    scale(scalar) {
      this.x = this.x * scalar;
      this.y = this.y * scalar;
    }
 
    rotate(angle) {
        var cosA = cos(angle);
        var sinA = sin(angle);
        var xNew = this.x * cosA - this.y * sinA;
        var yNew = this.x * sinA + this.y * cosA;
        this.x = xNew;
        this.y = yNew;
    }
    copy() {
        return math.Vector2D(this.x, this.y);
    }
    toString() {
        return "Vector2D(" + str(this.x) + ", " + str(this.y) + ")";
    } 
}



func floor(n) {
  if (n < 0 and n != int(n)) {
    return int(n) - 1;
  }
  return int(n);
} 

func max(a, b) {
  if (a > b) {
    return a;
  }
  return b;
}

func min(a, b) {
  if (a < b) {
    return a;
  }
  return b;
}

var PI = 3.141592653589793238462643383279;